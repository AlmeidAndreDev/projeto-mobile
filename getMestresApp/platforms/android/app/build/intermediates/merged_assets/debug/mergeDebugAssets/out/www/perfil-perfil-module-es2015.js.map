{"version":3,"sources":["./src/app/perfil/perfil.page.html","./src/app/perfil/perfil.module.ts","./src/app/perfil/perfil.page.scss","./src/app/perfil/perfil.page.ts","./src/models/customerModel.ts","./src/services/customer.service.ts"],"names":[],"mappings":"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","file":"perfil-perfil-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar class=\\\"ion-text-center\\\" color=\\\"primary\\\">\\n    <ion-title>Perfil</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"save()\\\">\\n        Salvar\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <ion-list>\\n    <div class=\\\"photo-container\\\">\\n      <img (click)=\\\"openLibraryPictures()\\\" [src]=\\\"!!form.photo ? form.photo : 'assets/no-picture.png'\\\" />\\n    </div>\\n    <ion-item-divider>\\n      <ion-label>Dados do usuário</ion-label>\\n    </ion-item-divider>\\n    <ion-item lines=\\\"none\\\">\\n      <ion-label position=\\\"stacked\\\">Nome</ion-label>\\n      <ion-input inputmode=\\\"text\\\" type=\\\"text\\\" placeholder=\\\"João Pedro\\\" [(ngModel)]=\\\"form.name\\\"></ion-input>\\n    </ion-item>\\n    <ion-item lines=\\\"none\\\">\\n      <ion-label position=\\\"stacked\\\">E-mail</ion-label>\\n      <ion-input inputmode=\\\"email\\\" type=\\\"email\\\" placeholder=\\\"joao@mail.com\\\" [(ngModel)]=\\\"form.email\\\"></ion-input>\\n    </ion-item>\\n    <ion-item lines=\\\"none\\\">\\n      <ion-label position=\\\"stacked\\\">Telefone</ion-label>\\n      <ion-input inputmode=\\\"text\\\" [brmasker]=\\\"{phone: true}\\\" placeholder=\\\"(00) 00000-0000\\\" type=\\\"text\\\"\\n        [(ngModel)]=\\\"form.phone\\\"></ion-input>\\n    </ion-item>\\n  </ion-list>\\n  <ion-list lines=\\\"none\\\">\\n    <ion-item-divider>\\n      <ion-label>Aplicativo</ion-label>\\n    </ion-item-divider>\\n    <ion-item (click)=\\\"changePassword()\\\">\\n      <ion-label>Trocar Senha</ion-label>\\n    </ion-item>\\n    <ion-item (click)=\\\"logout()\\\">\\n      <ion-label>Logout</ion-label>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BrMaskerModule } from 'br-mask';\nimport { IonicModule } from '@ionic/angular';\nimport { PerfilPage } from './perfil.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PerfilPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    BrMaskerModule\n  ],\n  declarations: [PerfilPage]\n})\nexport class PerfilPageModule {}\n","module.exports = \".photo-container img {\\n  max-height: 200px;\\n  width: 100%;\\n  -o-object-fit: cover;\\n     object-fit: cover;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGVyZmlsL0M6XFxhbmRyZVxcZmFjdWxkYWRlXFxjZWx1bGFyXFxnZXRtZXN0cmVzLW1hc3RlclxcZ2V0bWVzdHJlcy1tYXN0ZXJcXGdldE1lc3RyZXNBcHAvc3JjXFxhcHBcXHBlcmZpbFxccGVyZmlsLnBhZ2Uuc2NzcyIsInNyYy9hcHAvcGVyZmlsL3BlcmZpbC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxpQkFBQTtFQUNBLFdBQUE7RUFDQSxvQkFBQTtLQUFBLGlCQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9wZXJmaWwvcGVyZmlsLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5waG90by1jb250YWluZXIgaW1nIHtcbiAgbWF4LWhlaWdodDogMjAwcHg7XG4gIHdpZHRoOiAxMDAlO1xuICBvYmplY3QtZml0OiBjb3Zlcjtcbn1cbiIsIi5waG90by1jb250YWluZXIgaW1nIHtcbiAgbWF4LWhlaWdodDogMjAwcHg7XG4gIHdpZHRoOiAxMDAlO1xuICBvYmplY3QtZml0OiBjb3Zlcjtcbn0iXX0= */\"","import { ServiceProviderService } from './../../services/serviceProvider.service';\nimport { CameraService } from './../../services/camera.service';\nimport { AlertService } from './../../services/alert.service';\nimport { AlertController } from '@ionic/angular';\nimport { UserService } from '../../services/user.service';\nimport { CustomerService } from '../../services/customer.service';\nimport { Component } from '@angular/core';\nimport { CustomerModel } from '../../models/customerModel';\nimport { environment } from '../../environments/environment';\n\n@Component({\n  selector: 'app-perfil',\n  templateUrl: './perfil.page.html',\n  styleUrls: ['./perfil.page.scss'],\n})\nexport class PerfilPage {\n\n  form: CustomerModel = new CustomerModel();\n\n  constructor(\n    private customerSrv: CustomerService,\n    private userSrv: UserService,\n    private alertCtrl: AlertController,\n    private alertSrv: AlertService,\n    private cameraSrv: CameraService\n  ) { }\n\n  ionViewDidEnter() {\n    this.loadData();\n  }\n\n  async openLibraryPictures() {\n    const base64 = await this.cameraSrv.getPictureFromLibrary();\n    this.form.photo = base64;\n  }\n\n  async loadData() {\n    const {success, data} = await this.customerSrv.GetById(this.userSrv.UserData.uid);\n    if (success) {\n      this.form = data as CustomerModel;\n      this.fixPathPhoto();\n    }\n  }\n\n  fixPathPhoto() {\n    if (this.form.photo) {\n      this.form.photo = `${environment.url_api}/storage/${this.form.photo}`;\n    }\n  }\n\n  async save() {\n    const { success, data } = await this.customerSrv.post(this.form);\n    if (success) {\n      this.form = data;\n      this.fixPathPhoto();\n      this.alertSrv.toast('Perfil atualizado com sucesso!');\n    }\n  }\n\n\n  async changePasswordHandle(currentPassword: string, newPassword: string, confirmNewPassword: string) {\n    const { success } = await this.customerSrv.changePassword(currentPassword, newPassword, confirmNewPassword);\n    if (success) {\n      this.alertSrv.toast('Senha alterada com sucesso');\n    }\n  }\n\n  async changePassword() {\n    (\n      await this.alertCtrl.create({\n        header: 'Trocar Senha',\n        inputs: [\n          { placeholder: 'Digite sua senha atual', type: 'password', name: 'currentPassword' },\n          { placeholder: 'Digite a nova senha', type: 'password', name: 'newPassword' },\n          { placeholder: 'Digite a confirmação senha', type: 'password', name: 'confirmNewPassword' }\n        ],\n        buttons: [\n          { text: 'Cancelar', handler: () => { } },\n          {\n            text: 'Salvar', handler: ({ currentPassword, newPassword, confirmNewPassword }) => {\n              if (!newPassword || !confirmNewPassword || !currentPassword) {\n                this.alertSrv.toast('Digite todas as informações antes de continuar!');\n                return false;\n              } else {\n                this.changePasswordHandle(currentPassword, newPassword, confirmNewPassword);\n              }\n            }\n          }\n        ]\n      })\n    ).present();\n\n  }\n\n  logout() {\n    this.userSrv.logout();\n  }\n\n}\n","import { BaseModel } from './baseModel';\n\nexport class CustomerModel extends BaseModel {\n  name: string;\n  email: string;\n  photo: string;\n  phone: string;\n  password: string;\n  confirmPassword: string;\n}","import { HttpService } from './http.service';\nimport { Injectable } from '@angular/core';\nimport { BaseService } from './base.service';\nimport { CustomerModel } from '../models/customerModel';\n\n@Injectable({ providedIn: 'root' })\nexport class CustomerService extends BaseService<CustomerModel> {\n\n  constructor(\n    public http: HttpService\n  ) {\n    super('customer', http);\n  }\n\n  changePassword(currentPassword: string, newPassword: string, confirmNewPassword: string) {\n    return this.http.post(`${this.urlBase}/changepassword`, { currentPassword, newPassword, confirmNewPassword });\n  }\n\n}"],"sourceRoot":""}